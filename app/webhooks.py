from fastapi import APIRouter, BackgroundTasks, Request
from pydantic import BaseModel
from .telegram_bot import telegram_bot

router = APIRouter()


class WebhookRequest(BaseModel):
    event: str
    data: dict


@router.post("/webhook", include_in_schema=False)
async def handle_webhook(
        request: Request,
        webhook: WebhookRequest,
        background_tasks: BackgroundTasks
):
    BASE_URL = str(request.base_url).rstrip("/")
    message = ""

    if webhook.event == "new_generation":
        topic = webhook.data.get("topic", "unknown topic")
        title = webhook.data.get("title", "untitled")
        message = (
            f"üöÄ <b>–ù–æ–≤—ã–π –ø–æ—Å—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!</b>\n"
            f"üìå –¢–µ–º–∞: <code>{topic}</code>\n"
            f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}\n"
            f"üåê –°—Å—ã–ª–∫–∞: <a href='{BASE_URL}/docs'>Swagger UI</a>"
        )

    elif webhook.event == "health_check":
        message = "üü¢ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"

    elif webhook.event == "error":
        error = webhook.data.get("message", "unknown error")
        message = f"‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –≤ API!</b>\n{error}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    telegram_bot.send_async(background_tasks, message)

    return {"status": "notification_sent"}